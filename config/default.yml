#------------------------------------------------
# This is the default configuration for Meter.
# Override it by creating a local.yml next to it.
# The config isn't hot-reloaded, so you need to restart
# the meter if you change anything.
#------------------------------------------------


# The name used to identify this meter when talking to the backend
# If not set, a QR code will be displayed pointing to registrationBaseUrl
meterName: Unregistered

# The URL of the backend to which ticks are posted
tickUrl: http://localhost:3000/api/ticks

# The URL that will be used in the QR code that is displayed when no meterName is set.
# The deviceId will be passed along using an # (anchor tag).
# Example: http://my.server/register#abcdefgh
registrationBaseUrl: http://localhost:3000/register

deviceIdPath: ./test/device-id

# If simulate is 0, thenfi no ticks are simulated.
# If > 0, then a fake tick is sent every X seconds
simulate: 0

# Minimum number of seconds between each send.
# Higher number means fewer http requests and more ticks per batch.
# Must be at least 1 second.
# 1 second pretty much means it will send every tick immediately (= no batching of ticks).
minSendInterval: 1

logPulseDetection: false

# The folder that contains batched and sent ticks.
tickStoragePath: ticks

# Which pin the ticks are reported through (pin number, not GPIO number)
tickInputPin: 12

# How many seconds between each update of the display
# (when displaying tick counter)
counterDisplayInterval: 1

# Retry settings for when the tickUrl isn't reachable.
retry:
  minTimeout: 1000 #First retry is after 1 second
  factor: 2 #and next retry will be after 2 seconds, then 4 seconds, 8 seconds, 16 seconds...
  maxTimeout: 30000 #and all retries after that will be in 30 second intervals
  retries: 100000 #That's about 1 month of retrying! 100,000 x 30 seconds.
